---
#- name: Darwin | Include Xcode tasks
#  include_tasks: "{{ ansible_os_family }}/xcode.yml"
#  vars:
#    xcode_version: "{{ xcode_version_item.key }}"
#    xcode_binary_local_path: "{{ xcode_version_item.value.binary_local_path }}"
#    xcode_binary_name: "{{ xcode_version_item.value.binary_name }}"
#    xcode_binary_extension: "{{ xcode_version_item.value.binary_extension }}"
#  with_dict: "{{ xcode_versions }}"
#  loop_control:
#    loop_var: xcode_version_item
#  tags:
#    - jenkins-slave-xcode

#- name: Darwin | Install Xcode Command Line Tools
#  import_role:
#    name: elliotweiser.osx-command-line-tools

- name: Darwin | Include Homebrew tasks
  include_tasks: "{{ ansible_os_family }}/homebrew.yml"
  tags:
    - jenkins-slave-homebrew
  become: no

- name: Darwin | Include CUDA tasks
  include_tasks: "{{ ansible_os_family }}/cuda.yml"
  vars:
    cuda_version: "{{ item.key }}"
    cuda_binary_name: "{{ item.value.binary_name }}"
    cuda_binary_md5: "{{ item.value.md5 }}"
    cuda_url_prefix: "{{ item.value.url_prefix }}"
    cuda_binary_mount_point: "{{ item.value.mount_point }}"
    cuda_installer_path: "{{ item.value.installer_path }}"
    cuda_installer_options: "{{ item.value.installer_options }}"
  with_dict: "{{ cuda_versions }}"
  tags:
    - jenkins-slave-cuda

- name: Darwin | Include gcc runtime fix tasks
  include_tasks: "{{ ansible_os_family }}/gcc_runtime_fix.yml"
  tags:
    - jenkins-slave-gcc-runtime-fix

- name: Darwin | Include sshd configuration tasks
  include_tasks: "{{ ansible_os_family }}/sshd.yml"
  tags:
    - jenkins-slave-sshd
  notify:
    - "Restart Jenkins slave"
    - "Wait for Jenkins slave restart"

- name: Darwin | Create user service folder
  file:
    path: "{{ jenkins_slave_service_config_file_path }}"
    owner: "{{ jenkins_user_name }}"
    group: "{{ jenkins_user_group }}"
    state: directory
    mode: 0755
  when: jenkins_slave_connection_type == 'jnlp'

# FIXME: Wrong user PATH value substituted
- name: Darwin | Get PATH environment variable value for {{ jenkins_user_name }} user
  shell: "echo $PATH"
  args:
      executable: "/bin/bash"
  register: jenkins_user_path_env_var_value
  become: true
  become_user: "{{ jenkins_user_name }}"
  when: jenkins_slave_connection_type == 'jnlp'

- name: Darwin | Create Jenkins slave service configuration
  template:
    src: "jenkins-slave/{{ jenkins_slave_service_config_file_name }}.j2"
    dest: "{{ jenkins_slave_service_config_file_path }}/{{ jenkins_slave_service_config_file_name }}"
    owner: "{{ root_user_name }}"
    group: "{{ root_user_group }}"
    mode: 0644
  become: true
  notify:
    - "Restart Jenkins slave service"
  when: jenkins_slave_connection_type == 'jnlp'

